{"version":3,"sources":["component/markedComponent/MarkeDiv.js","component/navbar/NavBar.js","component/sidelist/ListItem.js","App.js","index.js"],"names":["marked","require","MarkeDiv","props","state","c","markdown","m","id","dangerouslySetInnerHTML","__html","this","Component","NavBar","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","Divider","eventKey","ListItem","ListGroup","App","Container","fluid","Row","Col","md","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGIA,EAASC,EAAQ,IAEAC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,EAAE,kwmBACFC,SACE,+0KACFC,EACE,o11DAPa,E,0CAUnB,WACE,OACE,sBAAKC,GAAG,OAAR,UACE,iCACE,uCAEF,qBACEC,wBAAyB,CACvBC,OAAQV,EAAOW,KAAKP,MAAMC,a,GAnBAO,a,gCCDjBC,E,4JACnB,WACE,OACE,mCACE,eAACC,EAAA,EAAD,CAEEC,kBAAgB,EAChBC,OAAO,KACPC,GAAG,OACHC,QAAQ,OACRC,MAAM,MANR,UASE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,QAAnB,sBACA,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,eAACT,EAAA,EAAOU,SAAR,CAAiBhB,GAAG,wBAApB,UACE,eAACiB,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUN,KAAK,YAAf,kBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,WAAf,qBACA,eAACO,EAAA,EAAD,CAAaC,MAAM,sBAAsBrB,GAAG,0BAA5C,UACE,cAACoB,EAAA,EAAYE,KAAb,CAAkBT,KAAK,gBACvB,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,iBAGA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,wBAGA,cAACO,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,0BAKJ,eAACI,EAAA,EAAD,WACE,cAACA,EAAA,EAAIE,KAAL,CAAUN,KAAK,SAAf,mBACA,cAACI,EAAA,EAAIE,KAAL,CAAUK,SAAU,EAAGX,KAAK,SAA5B,yC,GAnCsBT,a,8CCAfqB,E,4JACnB,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CAAWhB,QAAQ,QAAnB,UACE,cAACgB,EAAA,EAAUJ,KAAX,kBACA,cAACI,EAAA,EAAUJ,KAAX,mBACA,cAACI,EAAA,EAAUJ,KAAX,qBACA,cAACI,EAAA,EAAUJ,KAAX,iC,GAR4BlB,aCEjBuB,E,kDACnB,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXE,SAAU,sBAHK,E,0CAOnB,WACE,OACE,eAAC8B,EAAA,EAAD,CAAW5B,GAAG,aAAa6B,MAAM,QAAjC,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,eAAe,cAAC,EAAD,IAAf,SAEF,eAACF,EAAA,EAAD,CAAK9B,GAAG,OAAR,UACE,eAAC+B,EAAA,EAAD,CAAMC,GAAI,EAAV,eAAgB,cAAC,EAAD,IAAhB,OACA,eAACD,EAAA,EAAD,CAAMC,GAAI,EAAGd,UAAU,IAAvB,cAA4B,cAAC,EAAD,IAA5B,iB,GAhBuBe,IAAM7B,W,MCAvC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c4e1c4b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./MarkeDiv.css\";\r\n\r\nlet marked = require(\"marked\");\r\n\r\nexport default class MarkeDiv extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      c:\"# C++ Data Structures and Algorithms Cheat Sheet\\n\\n## Table of Contents\\n\\n<!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 -->\\n\\n- [C++ Data Structures and Algorithms Cheat Sheet](#c-data-structures-and-algorithms-cheat-sheet)\\n\\t- [Table of Contents](#table-of-contents)\\n\\t- [1.0 Data Structures](#10-data-structures)\\n\\t\\t- [1.1 Overview](#11-overview)\\n\\t\\t- [1.2 Vector `std::vector`](#12-vector-stdvector)\\n\\t\\t- [1.3 Deque `std::deque`](#13-deque-stddeque)\\n\\t\\t- [1.4 List `std::list` and `std::forward_list`](#14-list-stdlist-and-stdforward_list)\\n\\t\\t- [1.5 Map `std::map` and `std::unordered_map`](#15-map-stdmap-and-stdunordered_map)\\n\\t\\t- [1.6 Set `std::set`](#16-set-stdset)\\n\\t\\t- [1.7 Stack `std::stack`](#17-stack-stdstack)\\n\\t\\t- [1.8 Queue `std::queue`](#18-queue-stdqueue)\\n\\t\\t- [1.9 Priority Queue `std::priority_queue`](#19-priority-queue-stdpriority_queue)\\n\\t\\t- [1.10 Heap `std::priority_queue`](#110-heap-stdpriority_queue)\\n\\t- [2.0 Trees](#20-trees)\\n\\t\\t- [2.1 Binary Tree](#21-binary-tree)\\n\\t\\t- [2.2 Balanced Trees](#22-balanced-trees)\\n\\t\\t- [2.3 Binary Search](#23-binary-search)\\n\\t\\t- [2.4 Depth-First Search](#24-depth-first-search)\\n\\t\\t- [2.5 Breadth-First Search](#25-breadth-first-search)\\n\\t- [3.0 NP Complete Problems](#30-np-complete-problems)\\n\\t\\t- [3.1 NP Complete](#31-np-complete)\\n\\t\\t- [3.2 Traveling Salesman Problem](#32-traveling-salesman-problem)\\n\\t\\t- [3.3 Knapsack Problem](#33-knapsack-problem)\\n\\t- [4.0 Algorithms](#40-algorithms)\\n\\t\\t- [4.1 Insertion Sort](#41-insertion-sort)\\n\\t\\t- [4.2 Selection Sort](#42-selection-sort)\\n\\t\\t- [4.3 Bubble Sort](#43-bubble-sort)\\n\\t\\t- [4.4 Merge Sort](#44-merge-sort)\\n\\t\\t- [4.5 Quicksort](#45-quicksort)\\n\\n<!-- /TOC -->\\n\\n\\n## 1.0 Data Structures\\n### 1.1 Overview\\n\\n![Legend](General/Legend.png)\\n\\n![DataStructures](General/Data%20Structures.png \\\"Data Structures\\\")\\n\\n![ComplexityChart](General/Complexity%20Chart.png \\\"Complexity Chart\\\")\\n\\n![DataStructureSelection](General/Data%20Structures%20Selection.png \\\"Data Structures Selection\\\")\\n-------------------------------------------------------\\n### 1.2 Vector `std::vector`\\n**Use for**\\n* Simple storage\\n* Adding but not deleting\\n* Serialization\\n* Quick lookups by index\\n* Easy conversion to C-style arrays\\n* Efficient traversal (contiguous CPU caching)\\n\\n**Do not use for**\\n* Insertion/deletion in the middle of the list\\n* Dynamically changing storage\\n* Non-integer indexing\\n\\n**Time Complexity**\\n\\n| Operation    | Time Complexity |\\n|--------------|-----------------|\\n| Insert Head  |          `O(n)` |\\n| Insert Index |          `O(n)` |\\n| Insert Tail  |          `O(1)` |\\n| Remove Head  |          `O(n)` |\\n| Remove Index |          `O(n)` |\\n| Remove Tail  |          `O(1)` |\\n| Find Index   |          `O(1)` |\\n| Find Object  |          `O(n)` |\\n\\n**Example Code**\\n```c++\\nstd::vector<int> v;\\n\\n//---------------------------------\\n// General Operations\\n//---------------------------------\\n\\n// Size\\nunsigned int size = v.size();\\n\\n// Insert head, index, tail\\nv.insert(v.begin(), value);             // head\\nv.insert(v.begin() + index, value);     // index\\nv.push_back(value);                     // tail\\n\\n// Access head, index, tail\\nint head = v.front();       // head\\nhead = v[0];                // or using array style indexing\\n\\nint value = v.at(index);    // index\\nvalue = v[index];           // or using array style indexing\\n\\nint tail = v.back();        // tail\\ntail = v[v.size() - 1];     // or using array style indexing\\n\\n// Iterate\\nfor(std::vector<int>::iterator it = v.begin(); it != v.end(); it++) {\\n    std::cout << *it << std::endl;\\n}\\n\\n// Remove head, index, tail\\nv.erase(v.begin());             // head\\nv.erase(v.begin() + index);     // index\\nv.pop_back();                   // tail\\n\\n// Clear\\nv.clear();\\n```\\n-------------------------------------------------------\\n### 1.3 Deque `std::deque`\\n**Use for**\\n* Similar purpose of `std::vector`\\n* Basically `std::vector` with efficient `push_front` and `pop_front`\\n\\n**Do not use for**\\n* C-style contiguous storage (not guaranteed)\\n\\n**Notes**\\n* Pronounced 'deck'\\n* Stands for **D**ouble **E**nded **Que**ue\\n\\n**Example Code**\\n```c++\\nstd::deque<int> d;\\n\\n//---------------------------------\\n// General Operations\\n//---------------------------------\\n\\n// Insert head, index, tail\\nd.push_front(value);                    // head\\nd.insert(d.begin() + index, value);     // index\\nd.push_back(value);                     // tail\\n\\n// Access head, index, tail\\nint head = d.front();       // head\\nint value = d.at(index);    // index\\nint tail = d.back();        // tail\\n\\n// Size\\nunsigned int size = d.size();\\n\\n// Iterate\\nfor(std::deque<int>::iterator it = d.begin(); it != d.end(); it++) {\\n    std::cout << *it << std::endl;\\n}\\n\\n// Remove head, index, tail\\nd.pop_front();                  // head\\nd.erase(d.begin() + index);     // index\\nd.pop_back();                   // tail\\n\\n// Clear\\nd.clear();\\n```\\n-------------------------------------------------------\\n### 1.4 List `std::list` and `std::forward_list`\\n**Use for**\\n* Insertion into the middle/beginning of the list\\n* Efficient sorting (pointer swap vs. copying)\\n\\n**Do not use for**\\n* Direct access\\n\\n**Time Complexity**\\n\\n| Operation    | Time Complexity |\\n|--------------|-----------------|\\n| Insert Head  |          `O(1)` |\\n| Insert Index |          `O(n)` |\\n| Insert Tail  |          `O(1)` |\\n| Remove Head  |          `O(1)` |\\n| Remove Index |          `O(n)` |\\n| Remove Tail  |          `O(1)` |\\n| Find Index   |          `O(n)` |\\n| Find Object  |          `O(n)` |\\n\\n**Example Code**\\n```c++\\nstd::list<int> l;\\n\\n//---------------------------------\\n// General Operations\\n//---------------------------------\\n\\n// Insert head, index, tail\\nl.push_front(value);                    // head\\nl.insert(l.begin() + index, value);     // index\\nl.push_back(value);                     // tail\\n\\n// Access head, index, tail\\nint head = l.front();                                           // head\\nint value = std::next(l.begin(), index);\\t\\t        // index\\nint tail = l.back();                                            // tail\\n\\n// Size\\nunsigned int size = l.size();\\n\\n// Iterate\\nfor(std::list<int>::iterator it = l.begin(); it != l.end(); it++) {\\n    std::cout << *it << std::endl;\\n}\\n\\n// Remove head, index, tail\\nl.pop_front();                  // head\\nl.erase(l.begin() + index);     // index\\nl.pop_back();                   // tail\\n\\n// Clear\\nl.clear();\\n\\n//---------------------------------\\n// Container-Specific Operations\\n//---------------------------------\\n\\n// Splice: Transfer elements from list to list\\n//\\tsplice(iterator pos, list &x)\\n//  \\tsplice(iterator pos, list &x, iterator i)\\n//  \\tsplice(iterator pos, list &x, iterator first, iterator last)\\nl.splice(l.begin() + index, list2);\\n\\n// Remove: Remove an element by value\\nl.remove(value);\\n\\n// Unique: Remove duplicates\\nl.unique();\\n\\n// Merge: Merge two sorted lists\\nl.merge(list2);\\n\\n// Sort: Sort the list\\nl.sort();\\n\\n// Reverse: Reverse the list order\\nl.reverse();\\n```\\n-------------------------------------------------------\\n### 1.5 Map `std::map` and `std::unordered_map`\\n**Use for**\\n* Key-value pairs\\n* Constant lookups by key\\n* Searching if key/value exists\\n* Removing duplicates\\n* `std::map`\\n    * Ordered map\\n* `std::unordered_map`\\n    * Hash table\\n\\n**Do not use for**\\n* Sorting\\n\\n**Notes**\\n* Typically ordered maps (`std::map`) are slower than unordered maps (`std::unordered_map`)\\n* Maps are typically implemented as *binary search trees*\\n\\n**Time Complexity**\\n\\n**`std::map`**\\n\\n| Operation           | Time Complexity |\\n|---------------------|-----------------|\\n| Insert              |     `O(log(n))` |\\n| Access by Key       |     `O(log(n))` |\\n| Remove by Key       |     `O(log(n))` |\\n| Find/Remove Value   |     `O(log(n))` |\\n\\n**`std::unordered_map`**\\n\\n| Operation           | Time Complexity |\\n|---------------------|-----------------|\\n| Insert              |          `O(1)` |\\n| Access by Key       |          `O(1)` |\\n| Remove by Key       |          `O(1)` |\\n| Find/Remove Value   |              -- |\\n\\n**Example Code**\\n```c++\\nstd::map<std::string, std::string> m;\\n\\n//---------------------------------\\n// General Operations\\n//---------------------------------\\n\\n// Insert\\nm.insert(std::pair<std::string, std::string>(\\\"key\\\", \\\"value\\\"));\\n\\n// Access by key\\nstd::string value = m.at(\\\"key\\\");\\n\\n// Size\\nunsigned int size = m.size();\\n\\n// Iterate\\nfor(std::map<std::string, std::string>::iterator it = m.begin(); it != m.end(); it++) {\\n    std::cout << *it << std::endl;\\n}\\n\\n// Remove by key\\nm.erase(\\\"key\\\");\\n\\n// Clear\\nm.clear();\\n\\n//---------------------------------\\n// Container-Specific Operations\\n//---------------------------------\\n\\n// Find if an element exists by key\\nbool exists = (m.find(\\\"key\\\") != m.end());\\n\\n// Count the number of elements with a certain key\\nunsigned int count = m.count(\\\"key\\\");\\n```\\n-------------------------------------------------------\\n### 1.6 Set `std::set`\\n**Use for**\\n* Removing duplicates\\n* Ordered dynamic storage\\n\\n**Do not use for**\\n* Simple storage\\n* Direct access by index\\n\\n**Notes**\\n* Sets are often implemented with binary search trees\\n\\n**Time Complexity**\\n\\n| Operation    | Time Complexity |\\n|--------------|-----------------|\\n| Insert       |     `O(log(n))` |\\n| Remove       |     `O(log(n))` |\\n| Find         |     `O(log(n))` |\\n\\n**Example Code**\\n```c++\\nstd::set<int> s;\\n\\n//---------------------------------\\n// General Operations\\n//---------------------------------\\n\\n// Insert\\ns.insert(20);\\n\\n// Size\\nunsigned int size = s.size();\\n\\n// Iterate\\nfor(std::set<int>::iterator it = s.begin(); it != s.end(); it++) {\\n    std::cout << *it << std::endl;\\n}\\n\\n// Remove\\ns.erase(20);\\n\\n// Clear\\ns.clear();\\n\\n//---------------------------------\\n// Container-Specific Operations\\n//---------------------------------\\n\\n// Find if an element exists\\nbool exists = (s.find(20) != s.end());\\n\\n// Count the number of elements with a certain value\\nunsigned int count = s.count(20);\\n```\\n-------------------------------------------------------\\n### 1.7 Stack `std::stack`\\n**Use for**\\n* First-In Last-Out operations\\n* Reversal of elements\\n\\n**Time Complexity**\\n\\n| Operation    | Time Complexity |\\n|--------------|-----------------|\\n| Push         |          `O(1)` |\\n| Pop          |          `O(1)` |\\n| Top          |          `O(1)` |\\n\\n**Example Code**\\n```c++\\nstd::stack<int> s;\\n\\n//---------------------------------\\n// Container-Specific Operations\\n//---------------------------------\\n\\n// Push\\ns.push(20);\\n\\n// Size\\nunsigned int size = s.size();\\n\\n// Pop\\ns.pop();\\n\\n// Top\\nint top = s.top();\\n```\\n-------------------------------------------------------\\n### 1.8 Queue `std::queue`\\n**Use for**\\n* First-In First-Out operations\\n* Ex: Simple online ordering system (first come first served)\\n* Ex: Semaphore queue handling\\n* Ex: CPU scheduling (FCFS)\\n\\n**Notes**\\n* Often implemented as a `std::deque`\\n\\n**Example Code**\\n```c++\\nstd::queue<int> q;\\n\\n//---------------------------------\\n// General Operations\\n//---------------------------------\\n\\n// Insert\\nq.push(value);\\n\\n// Access head, tail\\nint head = q.front();       // head\\nint tail = q.back();        // tail\\n\\n// Size\\nunsigned int size = q.size();\\n\\n// Remove\\nq.pop();\\n```\\n-------------------------------------------------------\\n### 1.9 Priority Queue `std::priority_queue`\\n**Use for**\\n* First-In First-Out operations where **priority** overrides arrival time\\n* Ex: CPU scheduling (smallest job first, system/user priority)\\n* Ex: Medical emergencies (gunshot wound vs. broken arm)\\n\\n**Notes**\\n* Often implemented as a `std::vector`\\n\\n**Example Code**\\n```c++\\nstd::priority_queue<int> p;\\n\\n//---------------------------------\\n// General Operations\\n//---------------------------------\\n\\n// Insert\\np.push(value);\\n\\n// Access\\nint top = p.top();  // 'Top' element\\n\\n// Size\\nunsigned int size = p.size();\\n\\n// Remove\\np.pop();\\n```\\n-------------------------------------------------------\\n### 1.10 Heap `std::priority_queue`\\n**Notes**\\n* A heap is essentially an instance of a priority queue\\n* A **min** heap is structured with the root node as the smallest and each child subsequently larger than its parent\\n* A **max** heap is structured with the root node as the largest and each child subsequently smaller than its parent\\n* A min heap could be used for *Smallest Job First* CPU Scheduling\\n* A max heap could be used for *Priority* CPU Scheduling\\n\\n**Max Heap Example (using a binary tree)**\\n\\n![MaxHeap](General/MaxHeap.png)\\n-------------------------------------------------------\\n## 2.0 Trees\\n### 2.1 Binary Tree\\n* A binary tree is a tree with at most two (2) child nodes per parent\\n* Binary trees are commonly used for implementing `O(log(n))` operations for ordered maps, sets, heaps, and binary search trees\\n* Binary trees are **sorted** in that nodes with values greater than their parents are inserted to the **right**, while nodes with values less than their parents are inserted to the **left**\\n\\n**Binary Search Tree**\\n\\n![BinarySearchTree](General/BinarySearchTree.png)\\n-------------------------------------------------------\\n### 2.2 Balanced Trees\\n* Balanced trees are a special type of tree which maintains its balance to ensure `O(log(n))` operations\\n* When trees are not balanced the benefit of `log(n)` operations is lost due to the highly vertical structure\\n* Examples of balanced trees:\\n    * AVL Trees\\n    * Red-Black Trees\\n\\n-------------------------------------------------------\\n### 2.3 Binary Search\\n**Idea:**\\n1. If current element, return\\n2. If less than current element, look left\\n3. If more than current element, look right\\n4. Repeat\\n\\n**Data Structures:**\\n* Tree\\n* Sorted array\\n\\n**Space:**\\n* `O(1)`\\n\\n**Best Case:**\\n* `O(1)`\\n\\n**Worst Case:**\\n* `O(log n)`\\n\\n**Average:**\\n* `O(log n)`\\n\\n**Visualization:**\\n\\n![BinarySearch](Searching/Animations/Binary%20Search.gif \\\"Binary Search\\\")\\n-------------------------------------------------------\\n### 2.4 Depth-First Search\\n**Idea:**\\n1. Start at root node\\n2. Recursively search all adjacent nodes and mark them as searched\\n3. Repeat\\n\\n**Data Structures:**\\n* Tree\\n* Graph\\n\\n**Space:**\\n* `O(V)`, `V = number of verticies`\\n\\n**Performance:**\\n* `O(E)`, `E = number of edges`\\n\\n**Visualization:**\\n\\n![DepthFirstSearch](Searching/Animations/Depth-First%20Search.gif \\\"Depth-First Search\\\")\\n-------------------------------------------------------\\n### 2.5 Breadth-First Search\\n**Idea:**\\n1. Start at root node\\n2. Search neighboring nodes first before moving on to next level\\n\\n**Data Structures:**\\n* Tree\\n* Graph\\n\\n**Space:**\\n* `O(V)`, `V = number of verticies`\\n\\n**Performance:**\\n* `O(E)`, `E = number of edges`\\n\\n**Visualization:**\\n\\n![DepthFirstSearch](Searching/Animations/Breadth-First%20Search.gif \\\"Breadth-First Search\\\")\\n-------------------------------------------------------\\n## 3.0 NP Complete Problems\\n### 3.1 NP Complete\\n* **NP Complete** means that a problem is unable to be solved in **polynomial time**\\n* NP Complete problems can be *verified* in polynomial time, but not *solved*\\n\\n-------------------------------------------------------\\n### 3.2 Traveling Salesman Problem\\n\\n-------------------------------------------------------\\n### 3.3 Knapsack Problem\\n\\n[Implementation](NP-complete/knapsack/)\\n\\n-------------------------------------------------------\\n\\n## 4.0 Algorithms\\n###  4.1 Insertion Sort\\n#### Idea\\n1. Iterate over all elements\\n2. For each element:\\n    * Check if element is larger than largest value in sorted array\\n3. If larger: Move on\\n4. If smaller: Move item to correct position in sorted array\\n\\n#### Details\\n* **Data structure:** Array\\n* **Space:** `O(1)`\\n* **Best Case:** Already sorted, `O(n)`\\n* **Worst Case:** Reverse sorted, `O(n^2)`\\n* **Average:** `O(n^2)`\\n\\n#### Advantages\\n* Easy to code\\n* Intuitive\\n* Better than selection sort and bubble sort for small data sets\\n* Can sort in-place\\n\\n#### Disadvantages\\n* Very inefficient for large datasets\\n\\n#### Visualization\\n\\n![InsertionSort](Sorting/Animations/Insertion%20Sort.gif \\\"Insertion Sort\\\")\\n-------------------------------------------------------\\n### 4.2 Selection Sort\\n#### Idea\\n1. Iterate over all elements\\n2. For each element:\\n    * If smallest element of unsorted sublist, swap with left-most unsorted element\\n\\n#### Details\\n* **Data structure:** Array\\n* **Space:** `O(1)`\\n* **Best Case:** Already sorted, `O(n^2)`\\n* **Worst Case:** Reverse sorted, `O(n^2)`\\n* **Average:** `O(n^2)`\\n\\n#### Advantages\\n* Simple\\n* Can sort in-place\\n* Low memory usage for small datasets\\n\\n#### Disadvantages\\n* Very inefficient for large datasets\\n\\n#### Visualization\\n\\n![SelectionSort](Sorting/Animations/Selection%20Sort.gif \\\"Selection Sort\\\")\\n\\n![SelectionSort](Sorting/Animations/Selection%20Sort%202.gif \\\"Selection Sort 2\\\")\\n-------------------------------------------------------\\n### 4.3 Bubble Sort\\n#### Idea\\n1. Iterate over all elements\\n2. For each element:\\n    * Swap with next element if out of order\\n3. Repeat until no swaps needed\\n\\n#### Details\\n* **Data structure:** Array\\n* **Space:** `O(1)`\\n* **Best Case:** Already sorted `O(n)`\\n* **Worst Case:** Reverse sorted, `O(n^2)`\\n* **Average:** `O(n^2)`\\n\\n#### Advantages\\n* Easy to detect if list is sorted\\n\\n#### Disadvantages\\n* Very inefficient for large datasets\\n* Much worse than even insertion sort\\n\\n#### Visualization\\n\\n![BubbleSort](Sorting/Animations/Bubble%20Sort.gif \\\"Bubble Sort\\\")\\n-------------------------------------------------------\\n### 4.4 Merge Sort\\n#### Idea\\n1. Divide list into smallest unit (1 element)\\n2. Compare each element with the adjacent list\\n3. Merge the two adjacent lists\\n4. Repeat\\n\\n#### Details\\n* **Data structure:** Array\\n* **Space:** `O(n) auxiliary`\\n* **Best Case:** `O(nlog(n))`\\n* **Worst Case:** Reverse sorted, `O(nlog(n))`\\n* **Average:** `O(nlog(n))`\\n\\n#### Advantages\\n* High efficiency on large datasets\\n* Nearly always O(nlog(n))\\n* Can be parallelized\\n* Better space complexity than standard Quicksort\\n\\n#### Disadvantages\\n* Still requires O(n) extra space\\n* Slightly worse than Quicksort in some instances\\n\\n#### Visualization\\n\\n![MergeSort](Sorting/Animations/Merge%20Sort.gif \\\"Merge Sort\\\")\\n\\n![MergeSort](Sorting/Animations/Merge%20Sort%202.gif \\\"Merge Sort 2\\\")\\n-------------------------------------------------------\\n### 4.5 Quicksort\\n#### Idea\\n1. Choose a **pivot** from the array\\n2. Partition: Reorder the array so that all elements with values *less* than the pivot come before the pivot, and all values *greater* than the pivot come after\\n3. Recursively apply the above steps to the sub-arrays\\n\\n#### Details\\n* **Data structure:** Array\\n* **Space:** `O(n)`\\n* **Best Case:** `O(nlog(n))`\\n* **Worst Case:** All elements equal, `O(n^2)`\\n* **Average:** `O(nlog(n))`\\n\\n#### Advantages\\n* Can be modified to use O(log(n)) space\\n* Very quick and efficient with large datasets\\n* Can be parallelized\\n* Divide and conquer algorithm\\n\\n#### Disadvantages\\n* Not stable (could swap equal elements)\\n* Worst case is worse than Merge Sort\\n\\n#### Optimizations\\n* Choice of pivot:\\n    * Choose median of the first, middle, and last elements as pivot\\n    * Counters worst-case complexity for already-sorted and reverse-sorted\\n\\n#### Visualization\\n\\n![QuickSort](Sorting/Animations/Quicksort.gif)\\n\",\r\n      markdown:\r\n        \"\\n# Lorem ipsum  \\n\\n## Description\\n\\nThis repository contains a simple template for building [Pandoc](http://pandoc.org/) documents; Pandoc is a suite of tools to compile markdown files into readable files (PDF, EPUB, HTML...).\\n\\n## Usage\\n\\n### Installing\\n\\nIn order to use this makefile you will need to make sure that the following dependencies are installed on your system:\\n  - GNU make\\n  - Pandoc\\n  - LuaLaTeX\\n  - DejaVu Sans fonts\\n\\n### Folder structure\\n\\nHere's a folder structure for a Pandoc document:\\n\\n```\\nmy-document/     # Root directory.\\n|- build/        # Folder used to store builded (output) files.\\n|- src/          # Markdowns files; one for each chapter.\\n|- images/       # Images folder.\\n|- metadata.yml  # Metadata content (title, author...).\\n|- Makefile      # Makefile used for building our documents.\\n```\\n\\n### Setup generic data\\n\\nEdit the *metadata.yml* file to set configuration data:\\n\\n```yml\\n---\\ntitle: My document title\\nauthor: Ralph Huwiler\\nrights:  Creative Commons Attribution 4.0 International\\nlanguage: en-US\\ntags: [document, my-document, etc]\\nabstract: |\\n  Your summary text.\\n---\\n```\\n\\nYou can find the list of all available keys on [this page](http://pandoc.org/MANUAL.html#extension-yaml_metadata_block).\\n\\n### Creating chapters\\n\\nCreating a new chapter is as simple as creating a new markdown file in the *src/* folder; you'll end up with something like this:\\n\\n```\\nsrc/01-introduction.md\\nsrc/02-installation.md\\nsrc/03-usage.md\\nsrc/04-references.md\\n```\\n\\nPandoc and Make will join them automatically ordered by name; that's why the numeric prefixes are being used.\\n\\nAll you need to specify for each chapter at least one title:\\n\\n```md\\n# Introduction\\n\\nThis is the first paragraph of the introduction chapter.\\n\\n## First\\n\\nThis is the first subsection.\\n\\n## Second\\n\\nThis is the second subsection.\\n```\\n\\nEach title (*#*) will represent a chapter, while each subtitle (*##*) will represent a chapter's section. You can use as many levels of sections as markdown supports.\\n\\n#### Links between chapters\\n\\nAnchor links can be used to link chapters within the document:\\n\\n```md\\n// src/01-introduction.md\\n# Introduction\\n\\nFor more information, check the [Usage] chapter.\\n\\n// src/02-installation.md\\n# Usage\\n\\n...\\n```\\n\\nIf you want to rename the reference, use this syntax:\\n\\n```md\\nFor more information, check [this](#usage) chapter.\\n```\\n\\nAnchor names should be downcased, and spaces, colons, semicolons... should be replaced with hyphens. Instead of `Chapter title: A new era`, you have: `#chapter-title-a-new-era`.\\n\\n#### Links between sections\\n\\nIt's the same as anchor links:\\n\\n```md\\n# Introduction\\n\\n## First\\n\\nFor more information, check the [Second] section.\\n\\n## Second\\n\\n...\\n```\\n\\nOr, with al alternative name:\\n\\n```md\\nFor more information, check [this](#second) section.\\n```\\n\\n### Inserting objects\\n\\nText. That's cool. What about images and tables?\\n\\n#### Insert an image\\n\\nUse Markdown syntax to insert an image with a caption:\\n\\n```md\\n![A cool seagull.](images/seagull.png)\\n```\\n\\nPandoc will automatically convert the image into a figure (image + caption).\\n\\nIf you want to resize the image, you may use this syntax, available in Pandoc 1.16:\\n\\n```md\\n![A cool seagull.](images/seagull.png){ width=50% height=50% }\\n```\\n\\nAlso, to reference an image, use LaTeX labels:\\n\\n```md\\nPlease, admire the gloriousnes of Figure \\\\ref{seagull_image}.\\n\\n![A cool seagull.\\\\label{seagull_image}](images/seagull.png)\\n```\\n\\n#### Insert a table\\n\\nUse markdown table, and use the `Table: <Your table description>` syntax to add a caption:\\n\\n```md\\n| Index | Name |\\n| ----- | ---- |\\n| 0     | AAA  |\\n| 1     | BBB  |\\n| ...   | ...  |\\n\\nTable: This is an example table.\\n```\\n\\nIf you want to reference a table, use LaTeX labels:\\n\\n```md\\nPlease, check Table /ref{example_table}.\\n\\n| Index | Name |\\n| ----- | ---- |\\n| 0     | AAA  |\\n| 1     | BBB  |\\n| ...   | ...  |\\n\\nTable: This is an example table.\\\\label{example_table}\\n```\\n\\n#### Insert an equation\\n\\nWrap a LaTeX math equation between `$` delimiters for inline (tiny) formulas:\\n\\n```md\\nThis, $\\\\mu = \\\\sum_{i=0}^{N} \\\\frac{x_i}{N}$, the mean equation, ...\\n```\\n\\nPandoc will transform them automatically into images using online services.\\n\\nIf you want to center the equation instead of inlining it, use double `$$` delimiters:\\n\\n```md\\n$$\\\\mu = \\\\sum_{i=0}^{N} \\\\frac{x_i}{N}$$\\n```\\n\\n[Here](https://www.codecogs.com/latex/eqneditor.php)'s an online equation editor.\\n\\n### Output\\n\\nThis template uses *Makefile* to automatize the building process. Instead of using the *pandoc cli util*, we're going to use some *make* commands.\\n\\n#### Export to PDF\\n\\nUse this command:\\n\\n```sh\\nmake pdf\\n```\\n\\nThe generated file will be placed in *build/pdf*.\\n\\nPlease, note that PDF file generation requires some extra dependencies (~ 800 MB):\\n\\n```sh\\nsudo apt-get install texlive-latex-base texlive-fonts-recommended texlive-latex-extra \\n```\\n\\n#### Export to EPUB\\n\\nUse this command:\\n\\n```sh\\nmake epub\\n```\\n\\nThe generated file will be placed in *build/epub*.\\n\\n#### Export to HTML\\n\\nUse this command:\\n\\n```sh\\nmake html\\n```\\n\\nThe generated file(s) will be placed in *build/html*.\\n\\n## References\\n\\n- [Pandoc](http://pandoc.org/)\\n- [Pandoc Manual](http://pandoc.org/MANUAL.html)\\n- [Wikipedia: Markdown](http://wikipedia.org/wiki/Markdown)\",\r\n      m:\r\n        '<h1 align=\"center\"> :clipboard: Markdown snippets </h1>\\n\\n<p align=\"center\">\\n\\n<a href=\"http://unlicense.org/\">\\n<img src=\"https://img.shields.io/badge/license-Unlicense-blue.svg\" alt=\"License: Unlicense\">\\n</a>\\n\\n<a href=\"https://github.com/markdown-templates/markdown-snippets/issues\">\\n<img src=\"https://img.shields.io/github/issues/markdown-templates/markdown-snippets.svg\" alt=\"Issues\">\\n</a>\\n\\n<a href=\"https://github.com/markdown-templates/markdown-snippets/fork\">\\n<img src=\"https://img.shields.io/github/forks/markdown-templates/markdown-snippets.svg\" alt=\"Forks\">\\n</a>\\n\\n<a href=\"https://github.com/markdown-templates/markdown-snippets/stargazers\">\\n<img src=\"https://img.shields.io/github/stars/markdown-templates/markdown-snippets.svg\" alt=\"Stars\">\\n</a>\\n\\n</p>\\n\\n<p align=\"center\"> Markdown snippets for your documentation files. </p>\\n\\n<h2 align=\"center\"> :zap: Usage </h2>\\n\\n<p align=\"center\"> 1. Go to the snippet that you want to use and click <code>Raw</code>\\n<br>\\n<img src=\"https://i.imgur.com/QkHqujv.png\" alt=\"Raw Button\">\\n\\n<p align=\"center\"> 2. Copy the code <kbd>Strg</kbd>+<kbd>C</kbd>\\n<p align=\"center\"> 3. Paste the code in your markdown file <kbd>Strg</kbd>+<kbd>V</kbd>\\n<p align=\"center\"> 4. Done!\\n\\n<h2 align=\"center\"> :two_hearts: Contribute </h2>\\n\\n<p align=\"center\">Feel free to add your own templates via <a href=\"https://github.com/markdown-templates/markdown-snippets/pulls\"> pull request</a> :+1:</p>\\n\\n<p align=\"center\">We will take care about the documentation! :wrench:</p>\\n\\n<p align=\"center\"> Press the arrows below to expand the preview section </p>\\n\\n\\n----\\n\\n<details> <summary>01.00-header/</summary>\\n\\n### [01.00-header/navigation-bar-1.md](01.00-header/navigation-bar-1.md)\\n----\\n\\n<p align=\"center\">\\n<strong><a href=\"#link1\">Link 1</a></strong>\\n|\\n<strong><a href=\"#link2\">Link 2</a></strong>\\n|\\n<strong><a href=\"#link3\">Link 3</a></strong>\\n|\\n<strong><a href=\"#link4\">Link 4</a></strong>\\n|\\n<strong><a href=\"#link5\">Link 5</a></strong>\\n</p>\\n\\n----\\n\\n\\n\\n\\n\\n### [01.00-header/table-of-content.md](01.00-header/table-of-content.md)\\n\\n- [Installation](#installation)\\n  - [sub1](#sub1)\\n  - [sub2](#sub2)\\n- [Usage](#usage)\\n  - [sub3](#sub3)\\n  - [sub4](#sub4)\\n- [License](#license)\\n- [Links](#links)\\n\\n\\n</details><details> <summary>01.01-license-badges/</summary>\\n\\n### [01.01-license-badges/Apache_2.0.md](01.01-license-badges/Apache_2.0.md)\\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\\n\\n\\n\\n\\n\\n### [01.01-license-badges/Attribution_License_(BY).md](01.01-license-badges/Attribution_License_(BY).md)\\n\\n[![License: Open Data Commons Attribution](https://img.shields.io/badge/License-ODC_BY-brightgreen.svg)](https://opendatacommons.org/licenses/by/)\\n\\n\\n### [01.01-license-badges/BSD_2-clause_license.md](01.01-license-badges/BSD_2-clause_license.md)\\n\\n[![License](https://img.shields.io/badge/License-BSD%202--Clause-orange.svg)](https://opensource.org/licenses/BSD-2-Clause)\\n\\n\\n### [01.01-license-badges/BSD_3-clause_license.md](01.01-license-badges/BSD_3-clause_license.md)\\n\\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\\n\\n\\n### [01.01-license-badges/GNU_GPL_v2.md](01.01-license-badges/GNU_GPL_v2.md)\\n\\n[![License: GPL v2](https://img.shields.io/badge/License-GPL%20v2-blue.svg)](https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)\\n\\n\\n### [01.01-license-badges/GNU_GPL_v3.md](01.01-license-badges/GNU_GPL_v3.md)\\n\\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\\n\\n\\n### [01.01-license-badges/MIT.md](01.01-license-badges/MIT.md)\\n\\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\\n\\n\\n### [01.01-license-badges/Mozilla_Public_License_2.0.md](01.01-license-badges/Mozilla_Public_License_2.0.md)\\n\\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)\\n\\n\\n### [01.01-license-badges/The_Unlicense.md](01.01-license-badges/The_Unlicense.md)\\n\\n[![License: Unlicense](https://img.shields.io/badge/license-Unlicense-blue.svg)](http://unlicense.org/)\\n\\n\\n</details><details> <summary>02.00-footer/</summary>\\n\\n### [02.00-footer/footnotes.md](02.00-footer/footnotes.md)\\n---\\n\\n<sup>[1]: Hello World</sup>  \\n<sup>[2]: Hello Internet</sup>\\n\\n\\n\\n\\n\\n### [02.00-footer/social-links.md](02.00-footer/social-links.md)\\n\\n---\\n\\n> [MyWebsite](https://www.example.com) &nbsp;&middot;&nbsp;\\n> GitHub [@MyGitHub](https://github.com/MyGitHub) &nbsp;&middot;&nbsp;\\n> Other [MyProfilename](https://othersocialmedia.com/MyProfile)\\n\\n\\n</details><details> <summary>03.00-emojis/</summary>\\n\\n### [03.00-emojis/emojis.md](03.00-emojis/emojis.md)\\n# People\\n\\n|                       :bowtie: `:bowtie:`                       |                        :smile: `:smile:`                        |           :laughing: `:laughing:`           |\\n| :-------------------------------------------------------------: | :-------------------------------------------------------------: | :-----------------------------------------: |\\n|                        :blush: `:blush:`                        |                       :smiley: `:smiley:`                       |            :relaxed: `:relaxed:`            |\\n|                        :smirk: `:smirk:`                        |                   :heart_eyes: `:heart_eyes:`                   |      :kissing_heart: `:kissing_heart:`      |\\n|          :kissing_closed_eyes: `:kissing_closed_eyes:`          |                      :flushed: `:flushed:`                      |           :relieved: `:relieved:`           |\\n|                    :satisfied: `:satisfied:`                    |                         :grin: `:grin:`                         |               :wink: `:wink:`               |\\n| :stuck_out_tongue_winking_eye: `:stuck_out_tongue_winking_eye:` | :stuck_out_tongue_closed_eyes: `:stuck_out_tongue_closed_eyes:` |           :grinning: `:grinning:`           |\\n|                      :kissing: `:kissing:`                      |         :kissing_smiling_eyes: `:kissing_smiling_eyes:`         |   :stuck_out_tongue: `:stuck_out_tongue:`   |\\n|                     :sleeping: `:sleeping:`                     |                      :worried: `:worried:`                      |           :frowning: `:frowning:`           |\\n|                    :anguished: `:anguished:`                    |                   :open_mouth: `:open_mouth:`                   |          :grimacing: `:grimacing:`          |\\n|                     :confused: `:confused:`                     |                       :hushed: `:hushed:`                       |     :expressionless: `:expressionless:`     |\\n|                     :unamused: `:unamused:`                     |                  :sweat_smile: `:sweat_smile:`                  |              :sweat: `:sweat:`              |\\n|        :disappointed_relieved: `:disappointed_relieved:`        |                        :weary: `:weary:`                        |            :pensive: `:pensive:`            |\\n|                 :disappointed: `:disappointed:`                 |                   :confounded: `:confounded:`                   |            :fearful: `:fearful:`            |\\n|                   :cold_sweat: `:cold_sweat:`                   |                    :persevere: `:persevere:`                    |                :cry: `:cry:`                |\\n|                          :sob: `:sob:`                          |                          :joy: `:joy:`                          |         :astonished: `:astonished:`         |\\n|                       :scream: `:scream:`                       |                    :neckbeard: `:neckbeard:`                    |         :tired_face: `:tired_face:`         |\\n|                        :angry: `:angry:`                        |                         :rage: `:rage:`                         |            :triumph: `:triumph:`            |\\n|                       :sleepy: `:sleepy:`                       |                          :yum: `:yum:`                          |               :mask: `:mask:`               |\\n|                   :sunglasses: `:sunglasses:`                   |                   :dizzy_face: `:dizzy_face:`                   |                :imp: `:imp:`                |\\n|                  :smiling_imp: `:smiling_imp:`                  |                 :neutral_face: `:neutral_face:`                 |           :no_mouth: `:no_mouth:`           |\\n|                     :innocent: `:innocent:`                     |                        :alien: `:alien:`                        |       :yellow_heart: `:yellow_heart:`       |\\n|                   :blue_heart: `:blue_heart:`                   |                 :purple_heart: `:purple_heart:`                 |              :heart: `:heart:`              |\\n|                  :green_heart: `:green_heart:`                  |                 :broken_heart: `:broken_heart:`                 |          :heartbeat: `:heartbeat:`          |\\n|                   :heartpulse: `:heartpulse:`                   |                   :two_hearts: `:two_hearts:`                   |   :revolving_hearts: `:revolving_hearts:`   |\\n|                        :cupid: `:cupid:`                        |              :sparkling_heart: `:sparkling_heart:`              |           :sparkles: `:sparkles:`           |\\n|                         :star: `:star:`                         |                        :star2: `:star2:`                        |              :dizzy: `:dizzy:`              |\\n|                         :boom: `:boom:`                         |                    :collision: `:collision:`                    |              :anger: `:anger:`              |\\n|                  :exclamation: `:exclamation:`                  |                     :question: `:question:`                     |   :grey_exclamation: `:grey_exclamation:`   |\\n|                :grey_question: `:grey_question:`                |                          :zzz: `:zzz:`                          |               :dash: `:dash:`               |\\n|                  :sweat_drops: `:sweat_drops:`                  |                        :notes: `:notes:`                        |       :musical_note: `:musical_note:`       |\\n|                         :fire: `:fire:`                         |                       :hankey: `:hankey:`                       |               :poop: `:poop:`               |\\n|                         :shit: `:shit:`                         |                           :+1: `:+1:`                           |           :thumbsup: `:thumbsup:`           |\\n|                           :-1: `:-1:`                           |                   :thumbsdown: `:thumbsdown:`                   |            :ok_hand: `:ok_hand:`            |\\n|                        :punch: `:punch:`                        |                    :facepunch: `:facepunch:`                    |               :fist: `:fist:`               |\\n|                            :v: `:v:`                            |                         :wave: `:wave:`                         |               :hand: `:hand:`               |\\n|                  :raised_hand: `:raised_hand:`                  |                   :open_hands: `:open_hands:`                   |           :point_up: `:point_up:`           |\\n|                   :point_down: `:point_down:`                   |                   :point_left: `:point_left:`                   |        :point_right: `:point_right:`        |\\n|                 :raised_hands: `:raised_hands:`                 |                         :pray: `:pray:`                         |         :point_up_2: `:point_up_2:`         |\\n|                         :clap: `:clap:`                         |                       :muscle: `:muscle:`                       |              :metal: `:metal:`              |\\n|                           :fu: `:fu:`                           |                      :walking: `:walking:`                      |             :runner: `:runner:`             |\\n|                      :running: `:running:`                      |                       :couple: `:couple:`                       |             :family: `:family:`             |\\n|        :two_men_holding_hands: `:two_men_holding_hands:`        |      :two_women_holding_hands: `:two_women_holding_hands:`      |             :dancer: `:dancer:`             |\\n|                      :dancers: `:dancers:`                      |                     :ok_woman: `:ok_woman:`                     |            :no_good: `:no_good:`            |\\n|      :information_desk_person: `:information_desk_person:`      |                 :raising_hand: `:raising_hand:`                 |    :bride_with_veil: `:bride_with_veil:`    |\\n|     :person_with_pouting_face: `:person_with_pouting_face:`     |              :person_frowning: `:person_frowning:`              |                :bow: `:bow:`                |\\n|                   :couplekiss: `:couplekiss:`                   |            :couple_with_heart: `:couple_with_heart:`            |            :massage: `:massage:`            |\\n|                      :haircut: `:haircut:`                      |                    :nail_care: `:nail_care:`                    |                :boy: `:boy:`                |\\n|                         :girl: `:girl:`                         |                        :woman: `:woman:`                        |                :man: `:man:`                |\\n|                         :baby: `:baby:`                         |                  :older_woman: `:older_woman:`                  |          :older_man: `:older_man:`          |\\n|       :person_with_blond_hair: `:person_with_blond_hair:`       |          :man_with_gua_pi_mao: `:man_with_gua_pi_mao:`          |    :man_with_turban: `:man_with_turban:`    |\\n|          :construction_worker: `:construction_worker:`          |                          :cop: `:cop:`                          |              :angel: `:angel:`              |\\n|                     :princess: `:princess:`                     |                   :smiley_cat: `:smiley_cat:`                   |          :smile_cat: `:smile_cat:`          |\\n|               :heart_eyes_cat: `:heart_eyes_cat:`               |                  :kissing_cat: `:kissing_cat:`                  |          :smirk_cat: `:smirk_cat:`          |\\n|                   :scream_cat: `:scream_cat:`                   |              :crying_cat_face: `:crying_cat_face:`              |            :joy_cat: `:joy_cat:`            |\\n|                  :pouting_cat: `:pouting_cat:`                  |                :japanese_ogre: `:japanese_ogre:`                |    :japanese_goblin: `:japanese_goblin:`    |\\n|                  :see_no_evil: `:see_no_evil:`                  |                 :hear_no_evil: `:hear_no_evil:`                 |      :speak_no_evil: `:speak_no_evil:`      |\\n|                    :guardsman: `:guardsman:`                    |                        :skull: `:skull:`                        |               :feet: `:feet:`               |\\n|                         :lips: `:lips:`                         |                         :kiss: `:kiss:`                         |            :droplet: `:droplet:`            |\\n|                          :ear: `:ear:`                          |                         :eyes: `:eyes:`                         |               :nose: `:nose:`               |\\n|                       :tongue: `:tongue:`                       |                  :love_letter: `:love_letter:`                  | :bust_in_silhouette: `:bust_in_silhouette:` |\\n|          :busts_in_silhouette: `:busts_in_silhouette:`          |               :speech_balloon: `:speech_balloon:`               |    :thought_balloon: `:thought_balloon:`    |\\n|                    :feelsgood: `:feelsgood:`                    |                     :finnadie: `:finnadie:`                     |          :goberserk: `:goberserk:`          |\\n|                      :godmode: `:godmode:`                      |                  :hurtrealbad: `:hurtrealbad:`                  |              :rage1: `:rage1:`              |\\n|                        :rage2: `:rage2:`                        |                        :rage3: `:rage3:`                        |              :rage4: `:rage4:`              |\\n|                      :suspect: `:suspect:`                      |                    :trollface: `:trollface:`                    |\\n\\n# Nature\\n\\n|                        :sunny: `:sunny:`                        |             :umbrella: `:umbrella:`             |                       :cloud: `:cloud:`                       |\\n| :-------------------------------------------------------------: | :---------------------------------------------: | :-----------------------------------------------------------: |\\n|                    :snowflake: `:snowflake:`                    |              :snowman: `:snowman:`              |                         :zap: `:zap:`                         |\\n|                      :cyclone: `:cyclone:`                      |                :foggy: `:foggy:`                |                       :ocean: `:ocean:`                       |\\n|                          :cat: `:cat:`                          |                  :dog: `:dog:`                  |                       :mouse: `:mouse:`                       |\\n|                      :hamster: `:hamster:`                      |               :rabbit: `:rabbit:`               |                        :wolf: `:wolf:`                        |\\n|                         :frog: `:frog:`                         |                :tiger: `:tiger:`                |                       :koala: `:koala:`                       |\\n|                         :bear: `:bear:`                         |                  :pig: `:pig:`                  |                    :pig_nose: `:pig_nose:`                    |\\n|                          :cow: `:cow:`                          |                 :boar: `:boar:`                 |                 :monkey_face: `:monkey_face:`                 |\\n|                       :monkey: `:monkey:`                       |                :horse: `:horse:`                |                   :racehorse: `:racehorse:`                   |\\n|                        :camel: `:camel:`                        |                :sheep: `:sheep:`                |                    :elephant: `:elephant:`                    |\\n|                   :panda_face: `:panda_face:`                   |                :snake: `:snake:`                |                        :bird: `:bird:`                        |\\n|                   :baby_chick: `:baby_chick:`                   |        :hatched_chick: `:hatched_chick:`        |              :hatching_chick: `:hatching_chick:`              |\\n|                      :chicken: `:chicken:`                      |              :penguin: `:penguin:`              |                      :turtle: `:turtle:`                      |\\n|                          :bug: `:bug:`                          |             :honeybee: `:honeybee:`             |                         :ant: `:ant:`                         |\\n|                       :beetle: `:beetle:`                       |                :snail: `:snail:`                |                     :octopus: `:octopus:`                     |\\n|                :tropical_fish: `:tropical_fish:`                |                 :fish: `:fish:`                 |                       :whale: `:whale:`                       |\\n|                       :whale2: `:whale2:`                       |              :dolphin: `:dolphin:`              |                        :cow2: `:cow2:`                        |\\n|                          :ram: `:ram:`                          |                  :rat: `:rat:`                  |               :water_buffalo: `:water_buffalo:`               |\\n|                       :tiger2: `:tiger2:`                       |              :rabbit2: `:rabbit2:`              |                      :dragon: `:dragon:`                      |\\n|                         :goat: `:goat:`                         |              :rooster: `:rooster:`              |                        :dog2: `:dog2:`                        |\\n|                         :pig2: `:pig2:`                         |               :mouse2: `:mouse2:`               |                          :ox: `:ox:`                          |\\n|                  :dragon_face: `:dragon_face:`                  |             :blowfish: `:blowfish:`             |                   :crocodile: `:crocodile:`                   |\\n|              :dromedary_camel: `:dromedary_camel:`              |              :leopard: `:leopard:`              |                        :cat2: `:cat2:`                        |\\n|                       :poodle: `:poodle:`                       |           :paw_prints: `:paw_prints:`           |                     :bouquet: `:bouquet:`                     |\\n|               :cherry_blossom: `:cherry_blossom:`               |                :tulip: `:tulip:`                |            :four_leaf_clover: `:four_leaf_clover:`            |\\n|                         :rose: `:rose:`                         |            :sunflower: `:sunflower:`            |                    :hibiscus: `:hibiscus:`                    |\\n|                   :maple_leaf: `:maple_leaf:`                   |               :leaves: `:leaves:`               |                 :fallen_leaf: `:fallen_leaf:`                 |\\n|                         :herb: `:herb:`                         |             :mushroom: `:mushroom:`             |                      :cactus: `:cactus:`                      |\\n|                    :palm_tree: `:palm_tree:`                    |       :evergreen_tree: `:evergreen_tree:`       |              :deciduous_tree: `:deciduous_tree:`              |\\n|                     :chestnut: `:chestnut:`                     |             :seedling: `:seedling:`             |                     :blossom: `:blossom:`                     |\\n|                  :ear_of_rice: `:ear_of_rice:`                  |                :shell: `:shell:`                |        :globe_with_meridians: `:globe_with_meridians:`        |\\n|                :sun_with_face: `:sun_with_face:`                |  :full_moon_with_face: `:full_moon_with_face:`  |          :new_moon_with_face: `:new_moon_with_face:`          |\\n|                     :new_moon: `:new_moon:`                     | :waxing_crescent_moon: `:waxing_crescent_moon:` |          :first_quarter_moon: `:first_quarter_moon:`          |\\n|          :waxing_gibbous_moon: `:waxing_gibbous_moon:`          |            :full_moon: `:full_moon:`            |         :waning_gibbous_moon: `:waning_gibbous_moon:`         |\\n|            :last_quarter_moon: `:last_quarter_moon:`            | :waning_crescent_moon: `:waning_crescent_moon:` | :last_quarter_moon_with_face: `:last_quarter_moon_with_face:` |\\n| :first_quarter_moon_with_face: `:first_quarter_moon_with_face:` |                 :moon: `:moon:`                 |                :earth_africa: `:earth_africa:`                |\\n|               :earth_americas: `:earth_americas:`               |           :earth_asia: `:earth_asia:`           |                     :volcano: `:volcano:`                     |\\n|                    :milky_way: `:milky_way:`                    |         :partly_sunny: `:partly_sunny:`         |                     :octocat: `:octocat:`                     |\\n|                     :squirrel: `:squirrel:`                     |\\n\\n# Objects\\n\\n|                         :bamboo: `:bamboo:`                         |                 :gift_heart: `:gift_heart:`                 |                  :dolls: `:dolls:`                  |\\n| :-----------------------------------------------------------------: | :---------------------------------------------------------: | :-------------------------------------------------: |\\n|                 :school_satchel: `:school_satchel:`                 |               :mortar_board: `:mortar_board:`               |                  :flags: `:flags:`                  |\\n|                      :fireworks: `:fireworks:`                      |                   :sparkler: `:sparkler:`                   |             :wind_chime: `:wind_chime:`             |\\n|                     :rice_scene: `:rice_scene:`                     |             :jack_o_lantern: `:jack_o_lantern:`             |                  :ghost: `:ghost:`                  |\\n|                          :santa: `:santa:`                          |             :christmas_tree: `:christmas_tree:`             |                   :gift: `:gift:`                   |\\n|                           :bell: `:bell:`                           |                    :no_bell: `:no_bell:`                    |          :tanabata_tree: `:tanabata_tree:`          |\\n|                           :tada: `:tada:`                           |              :confetti_ball: `:confetti_ball:`              |                :balloon: `:balloon:`                |\\n|                   :crystal_ball: `:crystal_ball:`                   |                         :cd: `:cd:`                         |                    :dvd: `:dvd:`                    |\\n|                    :floppy_disk: `:floppy_disk:`                    |                     :camera: `:camera:`                     |           :video_camera: `:video_camera:`           |\\n|                   :movie_camera: `:movie_camera:`                   |                   :computer: `:computer:`                   |                     :tv: `:tv:`                     |\\n|                         :iphone: `:iphone:`                         |                      :phone: `:phone:`                      |              :telephone: `:telephone:`              |\\n|             :telephone_receiver: `:telephone_receiver:`             |                      :pager: `:pager:`                      |                    :fax: `:fax:`                    |\\n|                       :minidisc: `:minidisc:`                       |                        :vhs: `:vhs:`                        |                  :sound: `:sound:`                  |\\n|                        :speaker: `:speaker:`                        |                       :mute: `:mute:`                       |            :loudspeaker: `:loudspeaker:`            |\\n|                           :mega: `:mega:`                           |                  :hourglass: `:hourglass:`                  | :hourglass_flowing_sand: `:hourglass_flowing_sand:` |\\n|                    :alarm_clock: `:alarm_clock:`                    |                      :watch: `:watch:`                      |                  :radio: `:radio:`                  |\\n|                      :satellite: `:satellite:`                      |                       :loop: `:loop:`                       |                    :mag: `:mag:`                    |\\n|                      :mag_right: `:mag_right:`                      |                     :unlock: `:unlock:`                     |                   :lock: `:lock:`                   |\\n|              :lock_with_ink_pen: `:lock_with_ink_pen:`              |       :closed_lock_with_key: `:closed_lock_with_key:`       |                    :key: `:key:`                    |\\n|                           :bulb: `:bulb:`                           |                 :flashlight: `:flashlight:`                 |        :high_brightness: `:high_brightness:`        |\\n|                 :low_brightness: `:low_brightness:`                 |              :electric_plug: `:electric_plug:`              |                :battery: `:battery:`                |\\n|                        :calling: `:calling:`                        |                      :email: `:email:`                      |                :mailbox: `:mailbox:`                |\\n|                        :postbox: `:postbox:`                        |                       :bath: `:bath:`                       |                :bathtub: `:bathtub:`                |\\n|                         :shower: `:shower:`                         |                     :toilet: `:toilet:`                     |                 :wrench: `:wrench:`                 |\\n|                   :nut_and_bolt: `:nut_and_bolt:`                   |                     :hammer: `:hammer:`                     |                   :seat: `:seat:`                   |\\n|                       :moneybag: `:moneybag:`                       |                        :yen: `:yen:`                        |                 :dollar: `:dollar:`                 |\\n|                          :pound: `:pound:`                          |                       :euro: `:euro:`                       |            :credit_card: `:credit_card:`            |\\n|               :money_with_wings: `:money_with_wings:`               |                     :e-mail: `:e-mail:`                     |             :inbox_tray: `:inbox_tray:`             |\\n|                    :outbox_tray: `:outbox_tray:`                    |                   :envelope: `:envelope:`                   |      :incoming_envelope: `:incoming_envelope:`      |\\n|                    :postal_horn: `:postal_horn:`                    |             :mailbox_closed: `:mailbox_closed:`             |      :mailbox_with_mail: `:mailbox_with_mail:`      |\\n|           :mailbox_with_no_mail: `:mailbox_with_no_mail:`           |                       :door: `:door:`                       |                :smoking: `:smoking:`                |\\n|                           :bomb: `:bomb:`                           |                        :gun: `:gun:`                        |                  :hocho: `:hocho:`                  |\\n|                           :pill: `:pill:`                           |                    :syringe: `:syringe:`                    |         :page_facing_up: `:page_facing_up:`         |\\n|                 :page_with_curl: `:page_with_curl:`                 |              :bookmark_tabs: `:bookmark_tabs:`              |              :bar_chart: `:bar_chart:`              |\\n|       :chart_with_upwards_trend: `:chart_with_upwards_trend:`       | :chart_with_downwards_trend: `:chart_with_downwards_trend:` |                 :scroll: `:scroll:`                 |\\n|                      :clipboard: `:clipboard:`                      |                   :calendar: `:calendar:`                   |                   :date: `:date:`                   |\\n|                     :card_index: `:card_index:`                     |                :file_folder: `:file_folder:`                |       :open_file_folder: `:open_file_folder:`       |\\n|                       :scissors: `:scissors:`                       |                    :pushpin: `:pushpin:`                    |              :paperclip: `:paperclip:`              |\\n|                      :black_nib: `:black_nib:`                      |                    :pencil2: `:pencil2:`                    |         :straight_ruler: `:straight_ruler:`         |\\n|               :triangular_ruler: `:triangular_ruler:`               |                :closed_book: `:closed_book:`                |             :green_book: `:green_book:`             |\\n|                      :blue_book: `:blue_book:`                      |                :orange_book: `:orange_book:`                |               :notebook: `:notebook:`               |\\n| :notebook_with_decorative_cover: `:notebook_with_decorative_cover:` |                     :ledger: `:ledger:`                     |                  :books: `:books:`                  |\\n|                       :bookmark: `:bookmark:`                       |                 :name_badge: `:name_badge:`                 |             :microscope: `:microscope:`             |\\n|                      :telescope: `:telescope:`                      |                  :newspaper: `:newspaper:`                  |               :football: `:football:`               |\\n|                     :basketball: `:basketball:`                     |                     :soccer: `:soccer:`                     |               :baseball: `:baseball:`               |\\n|                         :tennis: `:tennis:`                         |                      :8ball: `:8ball:`                      |         :rugby_football: `:rugby_football:`         |\\n|                        :bowling: `:bowling:`                        |                       :golf: `:golf:`                       |     :mountain_bicyclist: `:mountain_bicyclist:`     |\\n|                      :bicyclist: `:bicyclist:`                      |               :horse_racing: `:horse_racing:`               |            :snowboarder: `:snowboarder:`            |\\n|                        :swimmer: `:swimmer:`                        |                     :surfer: `:surfer:`                     |                    :ski: `:ski:`                    |\\n|                         :spades: `:spades:`                         |                     :hearts: `:hearts:`                     |                  :clubs: `:clubs:`                  |\\n|                       :diamonds: `:diamonds:`                       |                        :gem: `:gem:`                        |                   :ring: `:ring:`                   |\\n|                         :trophy: `:trophy:`                         |              :musical_score: `:musical_score:`              |       :musical_keyboard: `:musical_keyboard:`       |\\n|                         :violin: `:violin:`                         |              :space_invader: `:space_invader:`              |             :video_game: `:video_game:`             |\\n|                    :black_joker: `:black_joker:`                    |       :flower_playing_cards: `:flower_playing_cards:`       |               :game_die: `:game_die:`               |\\n|                           :dart: `:dart:`                           |                    :mahjong: `:mahjong:`                    |                :clapper: `:clapper:`                |\\n|                           :memo: `:memo:`                           |                     :pencil: `:pencil:`                     |                   :book: `:book:`                   |\\n|                            :art: `:art:`                            |                 :microphone: `:microphone:`                 |             :headphones: `:headphones:`             |\\n|                        :trumpet: `:trumpet:`                        |                  :saxophone: `:saxophone:`                  |                 :guitar: `:guitar:`                 |\\n|                           :shoe: `:shoe:`                           |                     :sandal: `:sandal:`                     |              :high_heel: `:high_heel:`              |\\n|                       :lipstick: `:lipstick:`                       |                       :boot: `:boot:`                       |                  :shirt: `:shirt:`                  |\\n|                         :tshirt: `:tshirt:`                         |                    :necktie: `:necktie:`                    |         :womans_clothes: `:womans_clothes:`         |\\n|                          :dress: `:dress:`                          |    :running_shirt_with_sash: `:running_shirt_with_sash:`    |                  :jeans: `:jeans:`                  |\\n|                         :kimono: `:kimono:`                         |                     :bikini: `:bikini:`                     |                 :ribbon: `:ribbon:`                 |\\n|                         :tophat: `:tophat:`                         |                      :crown: `:crown:`                      |             :womans_hat: `:womans_hat:`             |\\n|                      :mans_shoe: `:mans_shoe:`                      |            :closed_umbrella: `:closed_umbrella:`            |              :briefcase: `:briefcase:`              |\\n|                        :handbag: `:handbag:`                        |                      :pouch: `:pouch:`                      |                  :purse: `:purse:`                  |\\n|                     :eyeglasses: `:eyeglasses:`                     |      :fishing_pole_and_fish: `:fishing_pole_and_fish:`      |                 :coffee: `:coffee:`                 |\\n|                            :tea: `:tea:`                            |                       :sake: `:sake:`                       |            :baby_bottle: `:baby_bottle:`            |\\n|                           :beer: `:beer:`                           |                      :beers: `:beers:`                      |               :cocktail: `:cocktail:`               |\\n|                 :tropical_drink: `:tropical_drink:`                 |                 :wine_glass: `:wine_glass:`                 |         :fork_and_knife: `:fork_and_knife:`         |\\n|                          :pizza: `:pizza:`                          |                  :hamburger: `:hamburger:`                  |                  :fries: `:fries:`                  |\\n|                    :poultry_leg: `:poultry_leg:`                    |               :meat_on_bone: `:meat_on_bone:`               |              :spaghetti: `:spaghetti:`              |\\n|                          :curry: `:curry:`                          |               :fried_shrimp: `:fried_shrimp:`               |                  :bento: `:bento:`                  |\\n|                          :sushi: `:sushi:`                          |                  :fish_cake: `:fish_cake:`                  |              :rice_ball: `:rice_ball:`              |\\n|                   :rice_cracker: `:rice_cracker:`                   |                       :rice: `:rice:`                       |                  :ramen: `:ramen:`                  |\\n|                           :stew: `:stew:`                           |                       :oden: `:oden:`                       |                  :dango: `:dango:`                  |\\n|                            :egg: `:egg:`                            |                      :bread: `:bread:`                      |               :doughnut: `:doughnut:`               |\\n|                        :custard: `:custard:`                        |                   :icecream: `:icecream:`                   |              :ice_cream: `:ice_cream:`              |\\n|                     :shaved_ice: `:shaved_ice:`                     |                   :birthday: `:birthday:`                   |                   :cake: `:cake:`                   |\\n|                         :cookie: `:cookie:`                         |              :chocolate_bar: `:chocolate_bar:`              |                  :candy: `:candy:`                  |\\n|                       :lollipop: `:lollipop:`                       |                  :honey_pot: `:honey_pot:`                  |                  :apple: `:apple:`                  |\\n|                    :green_apple: `:green_apple:`                    |                  :tangerine: `:tangerine:`                  |                  :lemon: `:lemon:`                  |\\n|                       :cherries: `:cherries:`                       |                     :grapes: `:grapes:`                     |             :watermelon: `:watermelon:`             |\\n|                     :strawberry: `:strawberry:`                     |                      :peach: `:peach:`                      |                  :melon: `:melon:`                  |\\n|                         :banana: `:banana:`                         |                       :pear: `:pear:`                       |              :pineapple: `:pineapple:`              |\\n|                   :sweet_potato: `:sweet_potato:`                   |                   :eggplant: `:eggplant:`                   |                 :tomato: `:tomato:`                 |\\n|                           :corn: `:corn:`                           |\\n\\n# Places\\n\\n|               :house: `:house:`               |       :house_with_garden: `:house_with_garden:`       |                 :school: `:school:`                 |\\n| :-------------------------------------------: | :---------------------------------------------------: | :-------------------------------------------------: |\\n|              :office: `:office:`              |             :post_office: `:post_office:`             |               :hospital: `:hospital:`               |\\n|                :bank: `:bank:`                |       :convenience_store: `:convenience_store:`       |             :love_hotel: `:love_hotel:`             |\\n|               :hotel: `:hotel:`               |                 :wedding: `:wedding:`                 |                 :church: `:church:`                 |\\n|    :department_store: `:department_store:`    |    :european_post_office: `:european_post_office:`    |           :city_sunrise: `:city_sunrise:`           |\\n|         :city_sunset: `:city_sunset:`         |         :japanese_castle: `:japanese_castle:`         |        :european_castle: `:european_castle:`        |\\n|                :tent: `:tent:`                |                 :factory: `:factory:`                 |            :tokyo_tower: `:tokyo_tower:`            |\\n|               :japan: `:japan:`               |              :mount_fuji: `:mount_fuji:`              | :sunrise_over_mountains: `:sunrise_over_mountains:` |\\n|             :sunrise: `:sunrise:`             |                   :stars: `:stars:`                   |      :statue_of_liberty: `:statue_of_liberty:`      |\\n|     :bridge_at_night: `:bridge_at_night:`     |          :carousel_horse: `:carousel_horse:`          |                :rainbow: `:rainbow:`                |\\n|        :ferris_wheel: `:ferris_wheel:`        |                :fountain: `:fountain:`                |         :roller_coaster: `:roller_coaster:`         |\\n|                :ship: `:ship:`                |               :speedboat: `:speedboat:`               |                   :boat: `:boat:`                   |\\n|            :sailboat: `:sailboat:`            |                 :rowboat: `:rowboat:`                 |                 :anchor: `:anchor:`                 |\\n|              :rocket: `:rocket:`              |                :airplane: `:airplane:`                |             :helicopter: `:helicopter:`             |\\n|    :steam_locomotive: `:steam_locomotive:`    |                    :tram: `:tram:`                    |       :mountain_railway: `:mountain_railway:`       |\\n|                :bike: `:bike:`                |          :aerial_tramway: `:aerial_tramway:`          |     :suspension_railway: `:suspension_railway:`     |\\n|   :mountain_cableway: `:mountain_cableway:`   |                 :tractor: `:tractor:`                 |               :blue_car: `:blue_car:`               |\\n| :oncoming_automobile: `:oncoming_automobile:` |                     :car: `:car:`                     |                :red_car: `:red_car:`                |\\n|                :taxi: `:taxi:`                |           :oncoming_taxi: `:oncoming_taxi:`           |      :articulated_lorry: `:articulated_lorry:`      |\\n|                 :bus: `:bus:`                 |            :oncoming_bus: `:oncoming_bus:`            |         :rotating_light: `:rotating_light:`         |\\n|          :police_car: `:police_car:`          |     :oncoming_police_car: `:oncoming_police_car:`     |            :fire_engine: `:fire_engine:`            |\\n|           :ambulance: `:ambulance:`           |                 :minibus: `:minibus:`                 |                  :truck: `:truck:`                  |\\n|               :train: `:train:`               |                 :station: `:station:`                 |                 :train2: `:train2:`                 |\\n|   :bullettrain_front: `:bullettrain_front:`   |        :bullettrain_side: `:bullettrain_side:`        |             :light_rail: `:light_rail:`             |\\n|            :monorail: `:monorail:`            |             :railway_car: `:railway_car:`             |             :trolleybus: `:trolleybus:`             |\\n|              :ticket: `:ticket:`              |                :fuelpump: `:fuelpump:`                | :vertical_traffic_light: `:vertical_traffic_light:` |\\n|       :traffic_light: `:traffic_light:`       |                 :warning: `:warning:`                 |           :construction: `:construction:`           |\\n|            :beginner: `:beginner:`            |                     :atm: `:atm:`                     |           :slot_machine: `:slot_machine:`           |\\n|             :busstop: `:busstop:`             |                  :barber: `:barber:`                  |             :hotsprings: `:hotsprings:`             |\\n|      :checkered_flag: `:checkered_flag:`      |           :crossed_flags: `:crossed_flags:`           |        :izakaya_lantern: `:izakaya_lantern:`        |\\n|               :moyai: `:moyai:`               |             :circus_tent: `:circus_tent:`             |        :performing_arts: `:performing_arts:`        |\\n|       :round_pushpin: `:round_pushpin:`       | :triangular_flag_on_post: `:triangular_flag_on_post:` |                     :jp: `:jp:`                     |\\n|                  :kr: `:kr:`                  |                      :cn: `:cn:`                      |                     :us: `:us:`                     |\\n|                  :fr: `:fr:`                  |                      :es: `:es:`                      |                     :it: `:it:`                     |\\n|                  :ru: `:ru:`                  |                      :gb: `:gb:`                      |                     :uk: `:uk:`                     |\\n|                  :de: `:de:`                  |\\n\\n# Symbols\\n\\n|                             :one: `:one:`                             |                         :two: `:two:`                         |                     :three: `:three:`                     |\\n| :-------------------------------------------------------------------: | :-----------------------------------------------------------: | :-------------------------------------------------------: |\\n|                            :four: `:four:`                            |                        :five: `:five:`                        |                       :six: `:six:`                       |\\n|                           :seven: `:seven:`                           |                       :eight: `:eight:`                       |                      :nine: `:nine:`                      |\\n|                      :keycap_ten: `:keycap_ten:`                      |                        :1234: `:1234:`                        |                      :zero: `:zero:`                      |\\n|                            :hash: `:hash:`                            |                     :symbols: `:symbols:`                     |            :arrow_backward: `:arrow_backward:`            |\\n|                      :arrow_down: `:arrow_down:`                      |               :arrow_forward: `:arrow_forward:`               |                :arrow_left: `:arrow_left:`                |\\n|                    :capital_abcd: `:capital_abcd:`                    |                        :abcd: `:abcd:`                        |                       :abc: `:abc:`                       |\\n|                :arrow_lower_left: `:arrow_lower_left:`                |           :arrow_lower_right: `:arrow_lower_right:`           |               :arrow_right: `:arrow_right:`               |\\n|                        :arrow_up: `:arrow_up:`                        |            :arrow_upper_left: `:arrow_upper_left:`            |         :arrow_upper_right: `:arrow_upper_right:`         |\\n|               :arrow_double_down: `:arrow_double_down:`               |             :arrow_double_up: `:arrow_double_up:`             |          :arrow_down_small: `:arrow_down_small:`          |\\n|              :arrow_heading_down: `:arrow_heading_down:`              |            :arrow_heading_up: `:arrow_heading_up:`            | :leftwards_arrow_with_hook: `:leftwards_arrow_with_hook:` |\\n|                :arrow_right_hook: `:arrow_right_hook:`                |            :left_right_arrow: `:left_right_arrow:`            |             :arrow_up_down: `:arrow_up_down:`             |\\n|                  :arrow_up_small: `:arrow_up_small:`                  |            :arrows_clockwise: `:arrows_clockwise:`            |   :arrows_counterclockwise: `:arrows_counterclockwise:`   |\\n|                          :rewind: `:rewind:`                          |                :fast_forward: `:fast_forward:`                |        :information_source: `:information_source:`        |\\n|                              :ok: `:ok:`                              |   :twisted_rightwards_arrows: `:twisted_rightwards_arrows:`   |                    :repeat: `:repeat:`                    |\\n|                      :repeat_one: `:repeat_one:`                      |                         :new: `:new:`                         |                       :top: `:top:`                       |\\n|                              :up: `:up:`                              |                        :cool: `:cool:`                        |                      :free: `:free:`                      |\\n|                              :ng: `:ng:`                              |                      :cinema: `:cinema:`                      |                      :koko: `:koko:`                      |\\n|                 :signal_strength: `:signal_strength:`                 |                       :u5272: `:u5272:`                       |                     :u5408: `:u5408:`                     |\\n|                           :u55b6: `:u55b6:`                           |                       :u6307: `:u6307:`                       |                     :u6708: `:u6708:`                     |\\n|                           :u6709: `:u6709:`                           |                       :u6e80: `:u6e80:`                       |                     :u7121: `:u7121:`                     |\\n|                           :u7533: `:u7533:`                           |                       :u7a7a: `:u7a7a:`                       |                     :u7981: `:u7981:`                     |\\n|                              :sa: `:sa:`                              |                    :restroom: `:restroom:`                    |                      :mens: `:mens:`                      |\\n|                          :womens: `:womens:`                          |                 :baby_symbol: `:baby_symbol:`                 |                :no_smoking: `:no_smoking:`                |\\n|                         :parking: `:parking:`                         |                  :wheelchair: `:wheelchair:`                  |                     :metro: `:metro:`                     |\\n|                   :baggage_claim: `:baggage_claim:`                   |                      :accept: `:accept:`                      |                        :wc: `:wc:`                        |\\n|                   :potable_water: `:potable_water:`                   |     :put_litter_in_its_place: `:put_litter_in_its_place:`     |                    :secret: `:secret:`                    |\\n|                 :congratulations: `:congratulations:`                 |                           :m: `:m:`                           |          :passport_control: `:passport_control:`          |\\n|                    :left_luggage: `:left_luggage:`                    |                     :customs: `:customs:`                     |       :ideograph_advantage: `:ideograph_advantage:`       |\\n|                              :cl: `:cl:`                              |                         :sos: `:sos:`                         |                        :id: `:id:`                        |\\n|                   :no_entry_sign: `:no_entry_sign:`                   |                    :underage: `:underage:`                    |          :no_mobile_phones: `:no_mobile_phones:`          |\\n|                   :do_not_litter: `:do_not_litter:`                   |           :non-potable_water: `:non-potable_water:`           |               :no_bicycles: `:no_bicycles:`               |\\n|                  :no_pedestrians: `:no_pedestrians:`                  |           :children_crossing: `:children_crossing:`           |                  :no_entry: `:no_entry:`                  |\\n|           :eight_spoked_asterisk: `:eight_spoked_asterisk:`           |    :eight_pointed_black_star: `:eight_pointed_black_star:`    |          :heart_decoration: `:heart_decoration:`          |\\n|                              :vs: `:vs:`                              |              :vibration_mode: `:vibration_mode:`              |          :mobile_phone_off: `:mobile_phone_off:`          |\\n|                           :chart: `:chart:`                           |           :currency_exchange: `:currency_exchange:`           |                     :aries: `:aries:`                     |\\n|                          :taurus: `:taurus:`                          |                      :gemini: `:gemini:`                      |                    :cancer: `:cancer:`                    |\\n|                             :leo: `:leo:`                             |                       :virgo: `:virgo:`                       |                     :libra: `:libra:`                     |\\n|                        :scorpius: `:scorpius:`                        |                 :sagittarius: `:sagittarius:`                 |                 :capricorn: `:capricorn:`                 |\\n|                        :aquarius: `:aquarius:`                        |                      :pisces: `:pisces:`                      |                 :ophiuchus: `:ophiuchus:`                 |\\n|                :six_pointed_star: `:six_pointed_star:`                | :negative_squared_cross_mark: `:negative_squared_cross_mark:` |                         :a: `:a:`                         |\\n|                               :b: `:b:`                               |                          :ab: `:ab:`                          |                        :o2: `:o2:`                        |\\n| :diamond_shape_with_a_dot_inside: `:diamond_shape_with_a_dot_inside:` |                     :recycle: `:recycle:`                     |                       :end: `:end:`                       |\\n|                              :on: `:on:`                              |                        :soon: `:soon:`                        |                    :clock1: `:clock1:`                    |\\n|                        :clock130: `:clock130:`                        |                     :clock10: `:clock10:`                     |                 :clock1030: `:clock1030:`                 |\\n|                         :clock11: `:clock11:`                         |                   :clock1130: `:clock1130:`                   |                   :clock12: `:clock12:`                   |\\n|                       :clock1230: `:clock1230:`                       |                      :clock2: `:clock2:`                      |                  :clock230: `:clock230:`                  |\\n|                          :clock3: `:clock3:`                          |                    :clock330: `:clock330:`                    |                    :clock4: `:clock4:`                    |\\n|                        :clock430: `:clock430:`                        |                      :clock5: `:clock5:`                      |                  :clock530: `:clock530:`                  |\\n|                          :clock6: `:clock6:`                          |                    :clock630: `:clock630:`                    |                    :clock7: `:clock7:`                    |\\n|                        :clock730: `:clock730:`                        |                      :clock8: `:clock8:`                      |                  :clock830: `:clock830:`                  |\\n|                          :clock9: `:clock9:`                          |                    :clock930: `:clock930:`                    |         :heavy_dollar_sign: `:heavy_dollar_sign:`         |\\n|                       :copyright: `:copyright:`                       |                  :registered: `:registered:`                  |                        :tm: `:tm:`                        |\\n|                               :x: `:x:`                               |      :heavy_exclamation_mark: `:heavy_exclamation_mark:`      |                  :bangbang: `:bangbang:`                  |\\n|                     :interrobang: `:interrobang:`                     |                           :o: `:o:`                           |    :heavy_multiplication_x: `:heavy_multiplication_x:`    |\\n|                 :heavy_plus_sign: `:heavy_plus_sign:`                 |            :heavy_minus_sign: `:heavy_minus_sign:`            |       :heavy_division_sign: `:heavy_division_sign:`       |\\n|                    :white_flower: `:white_flower:`                    |                         :100: `:100:`                         |          :heavy_check_mark: `:heavy_check_mark:`          |\\n|           :ballot_box_with_check: `:ballot_box_with_check:`           |                :radio_button: `:radio_button:`                |                      :link: `:link:`                      |\\n|                      :curly_loop: `:curly_loop:`                      |                   :wavy_dash: `:wavy_dash:`                   |     :part_alternation_mark: `:part_alternation_mark:`     |\\n|                         :trident: `:trident:`                         |                :black_square: `:black_square:`                |              :white_square: `:white_square:`              |\\n|                :white_check_mark: `:white_check_mark:`                |         :black_square_button: `:black_square_button:`         |       :white_square_button: `:white_square_button:`       |\\n|                    :black_circle: `:black_circle:`                    |                :white_circle: `:white_circle:`                |                :red_circle: `:red_circle:`                |\\n|               :large_blue_circle: `:large_blue_circle:`               |          :large_blue_diamond: `:large_blue_diamond:`          |      :large_orange_diamond: `:large_orange_diamond:`      |\\n|              :small_blue_diamond: `:small_blue_diamond:`              |        :small_orange_diamond: `:small_orange_diamond:`        |        :small_red_triangle: `:small_red_triangle:`        |\\n|         :small_red_triangle_down: `:small_red_triangle_down:`         |                      :shipit: `:shipit:`                      |\\n\\n<sup>Source: [https://gist.github.com/rxaviers/7360908](https://gist.github.com/rxaviers/7360908)</sup>\\n\\n\\n\\n\\n\\n</details><details> <summary>xtras-01-inline-html/</summary>\\n\\n### [xtras-01-inline-html/keyboard.md](xtras-01-inline-html/keyboard.md)\\n<kbd>Strg+X</kbd>  \\n<kbd>Strg</kbd> + <kbd>X</kbd>  \\n<kbd>Or any other text</kbd>\\n\\n\\n\\n\\n\\n### [xtras-01-inline-html/superscript.md](xtras-01-inline-html/superscript.md)\\n\\nThis is a text with <sup>SuperScript</sup>  \\nYou can use it for footnotes<sup>1</sup>\\n\\n---\\n\\n<sup>[1]: See [footnotes](../02-footer/footnotes)</sup>\\n\\n\\n### [xtras-01-inline-html/top-right.md](xtras-01-inline-html/top-right.md)\\n\\n<p align=\"right\">01/01/2000</p>\\nText on the top right corner\\n\\n',\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"mark\">\r\n        <center>\r\n          <h1>C++</h1>\r\n        </center>\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: marked(this.state.c),\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar\r\n        \r\n          collapseOnSelect\r\n          expand=\"lg\"\r\n          bg=\"dark\"\r\n          variant=\"dark\"\r\n          fixed=\"top\"\r\n          \r\n        >\r\n          <Navbar.Brand href=\"#home\">Dev Zone</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"  />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#features\">Home</Nav.Link>\r\n              <Nav.Link href=\"#pricing\">Exploer</Nav.Link>\r\n              <NavDropdown title=\"Program Cheat Cheet\" id=\"collasible-nav-dropdown\" >\r\n                <NavDropdown.Item href=\"#action/3.1\"></NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  C++\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Javasctipt\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Python\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link href=\"#deets\">Login</Nav.Link>\r\n              <Nav.Link eventKey={2} href=\"#memes\">\r\n                Regestration\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./ListItem.css\";\r\nimport { ListGroup, Col, Container } from \"react-bootstrap\";\r\n\r\nexport default class ListItem extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>C++</ListGroup.Item>\r\n          <ListGroup.Item>Java</ListGroup.Item>\r\n          <ListGroup.Item>Python</ListGroup.Item>\r\n          <ListGroup.Item>Algorisem</ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport MarkeDiv from \"./component/markedComponent/MarkeDiv\";\nimport NavBar from \"./component/navbar/NavBar\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport ListItem from './component/sidelist/ListItem';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: \"# jhkjhj\\n* kljklj\",\n    };\n  }\n\n  render() {\n    return (\n      <Container id=\"containerr\" fluid=\"false\">\n        <Row>\n          <Col md={12}>  <NavBar /> </Col>\n        </Row>\n        <Row id=\"page\">\n          <Col  md={8} >  <MarkeDiv /> </Col>\n          <Col  md={4} className=\"h\"> <ListItem/> </Col>\n \n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); "],"sourceRoot":""}